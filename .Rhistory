setwd("~/Dropbox/_Projects/Wugging/Analysis - Experiment 2")
#libraries
library(reshape)
####Load Datafiles
#Load in the data from the TVW files
mydata <- data.frame(NULL)
max_participant = 131
for(f in 1:max_participant) {
filename = paste('Data/TSW_', f, '.dat', sep='')
tryCatch({
tmp <- read.table(filename, header=FALSE, sep=" ")
names(tmp) <- c("Subject", "Condition", "Trial.Number", "MUSH", "First.Item", "Second.Item",
"First.Side", "Causal.Side", "Response.Causal", "Choice.Causal")
mydata <- rbind(mydata, tmp)
},
error = function(ex) {},
finally = {})
}
#Load in the data about participants and pretest/touch performance
pdata <- data.frame(NULL)
pdata <- read.table('Participants_TSW.csv', header=TRUE, sep=',')
mydata <- merge(mydata, pdata, by=c("Subject"))
#Make sure conditions are labeled correctly
mydata <- mydata[mydata$Experiment != "switch-pilot",]
#THROW OUT people who didn't get included!
#Optional - keep those who just failed pretest!!
mydata[mydata$Exclude.Reason == "FAILED PRETEST",]$Include <- 1
mydata <- mydata[mydata$Include == 1,]
mydata <- mydata[!is.na(mydata$Condition),]
################################################
#####DEMOGRAPHICS
#means days old - Note, it counts subjects not trials
collapsed <- mydata[!duplicated(mydata$Subject),]
transitive <- collapsed[collapsed$Condition=="Transitive",]
intransitive <- collapsed[collapsed$Condition=="Intransitive",]
happen <- collapsed[collapsed$Condition=="Happen",]
length(collapsed$Days.Old)
mean(aggregate(collapsed$Days.Old, by=list(collapsed$Subject), mean))
length(transitive$Days.Old)
mean(aggregate(transitive$Days.Old, by=list(transitive$Subject), mean))
length(intransitive$Days.Old)
mean(aggregate(intransitive$Days.Old, by=list(intransitive$Subject), mean))
length(happen$Days.Old)
mean(aggregate(happen$Days.Old, by=list(happen$Subject), mean))
foo <- subset(collapsed, select=c("Subject", "Days.Old"))
min(foo$Days.Old)
max(foo$Days.Old)
#Number of girls - Note, make sure it counts subjects, not trials!
foo <- subset(collapsed, select=c("Subject", "Gender"))
nrow(foo[foo$Gender=="F",])
nrow(foo[foo$Gender=="M",])
44+47
library(reshape)
####Load Datafiles
#Load in the data from the TVW files
mydata <- data.frame(NULL)
max_participant = 131
for(f in 1:max_participant) {
filename = paste('Data/TSW_', f, '.dat', sep='')
tryCatch({
tmp <- read.table(filename, header=FALSE, sep=" ")
names(tmp) <- c("Subject", "Condition", "Trial.Number", "MUSH", "First.Item", "Second.Item",
"First.Side", "Causal.Side", "Response.Causal", "Choice.Causal")
mydata <- rbind(mydata, tmp)
},
error = function(ex) {},
finally = {})
}
#Load in the data about participants and pretest/touch performance
pdata <- data.frame(NULL)
pdata <- read.table('Participants_TSW.csv', header=TRUE, sep=',')
mydata <- merge(mydata, pdata, by=c("Subject"))
#Make sure conditions are labeled correctly
mydata <- mydata[mydata$Experiment != "switch-pilot",]
#THROW OUT people who didn't get included!
#Optional - keep those who just failed pretest!!
mydata[mydata$Exclude.Reason == "FAILED PRETEST",]$Include <- 0
mydata <- mydata[mydata$Include == 1,]
mydata <- mydata[!is.na(mydata$Condition),]
#means days old - Note, it counts subjects not trials
collapsed <- mydata[!duplicated(mydata$Subject),]
transitive <- collapsed[collapsed$Condition=="Transitive",]
intransitive <- collapsed[collapsed$Condition=="Intransitive",]
happen <- collapsed[collapsed$Condition=="Happen",]
length(collapsed$Days.Old)
mean(aggregate(collapsed$Days.Old, by=list(collapsed$Subject), mean))
length(transitive$Days.Old)
mean(aggregate(transitive$Days.Old, by=list(transitive$Subject), mean))
length(intransitive$Days.Old)
mean(aggregate(intransitive$Days.Old, by=list(intransitive$Subject), mean))
length(happen$Days.Old)
mean(aggregate(happen$Days.Old, by=list(happen$Subject), mean))
foo <- subset(collapsed, select=c("Subject", "Days.Old"))
min(foo$Days.Old)
max(foo$Days.Old)
#Number of girls - Note, make sure it counts subjects, not trials!
foo <- subset(collapsed, select=c("Subject", "Gender"))
nrow(foo[foo$Gender=="F",])
nrow(foo[foo$Gender=="M",])
36+36
################################################
#######ANALYSIS!
#aggregate the choices in a new dataframe: how many causal choices did you make, 0, 1, or 2
sum.na.rm <- function(x) { sum(x,na.rm=T) }
my.sd <- function(x) {sd(x)/sqrt(length(x))}
Scores <- aggregate(mydata$Choice.Causal, by=list(mydata$Subject), sum.na.rm)
names(Scores) <- c("Subject", "CausalScore")
collapsed <- merge(collapsed,Scores, by=c("Subject"))
with(collapsed, tapply(CausalScore, list(Condition), mean, na.rm=TRUE), drop=TRUE)
with(collapsed, tapply(CausalScore, list(Condition), my.sd), drop=TRUE)
setwd("~/Dropbox/_Projects/Wugging/Analysis - Experiment 2")
#This reads in the *.dat data from a forced-choice
#experiment (TVW at the moment!)
#Note: Data cleaning & participant selection (see Participants_TSW for details for fussouts/other exclusions)
#Descriptives & analsyis start line 50
#setwd("C:\\Users\\mekline\\Documents\\My Dropbox\\_Projects\\Wugging - Finished Experiments\\2011 TemporalSwitchWugging\\Analysis")
setwd("/Users/mekline/Dropbox/_Projects/Wugging - Finished Experiments/2013 TemporalSwitchWugging/Analysis")
#DATA LOADING & SHAPING
#libraries
library(reshape)
####Load Datafiles
#Load in the data from the TVW files
mydata <- data.frame(NULL)
max_participant = 131
for(f in 1:max_participant) {
filename = paste('Data/TSW_', f, '.dat', sep='')
tryCatch({
tmp <- read.table(filename, header=FALSE, sep=" ")
names(tmp) <- c("Subject", "Condition", "Trial.Number", "MUSH", "First.Item", "Second.Item",
"First.Side", "Causal.Side", "Response.Causal", "Choice.Causal")
mydata <- rbind(mydata, tmp)
},
error = function(ex) {},
finally = {})
}
#Load in the data about participants and pretest/touch performance
pdata <- data.frame(NULL)
pdata <- read.table('Participants_TSW.csv', header=TRUE, sep=',')
mydata <- merge(mydata, pdata, by=c("Subject"))
#Make sure conditions are labeled correctly
mydata <- mydata[mydata$Experiment != "switch-pilot",]
#THROW OUT people who didn't get included!
#Optional - keep those who just failed pretest!!
mydata[mydata$Exclude.Reason == "FAILED PRETEST",]$Include <- 0
mydata <- mydata[mydata$Include == 1,]
mydata <- mydata[!is.na(mydata$Condition),]
################################################
#####DEMOGRAPHICS
#means days old - Note, it counts subjects not trials
collapsed <- mydata[!duplicated(mydata$Subject),]
transitive <- collapsed[collapsed$Condition=="Transitive",]
intransitive <- collapsed[collapsed$Condition=="Intransitive",]
happen <- collapsed[collapsed$Condition=="Happen",]
length(collapsed$Days.Old)
mean(aggregate(collapsed$Days.Old, by=list(collapsed$Subject), mean))
length(transitive$Days.Old)
mean(aggregate(transitive$Days.Old, by=list(transitive$Subject), mean))
length(intransitive$Days.Old)
mean(aggregate(intransitive$Days.Old, by=list(intransitive$Subject), mean))
length(happen$Days.Old)
mean(aggregate(happen$Days.Old, by=list(happen$Subject), mean))
foo <- subset(collapsed, select=c("Subject", "Days.Old"))
min(foo$Days.Old)
max(foo$Days.Old)
#Number of girls - Note, make sure it counts subjects, not trials!
foo <- subset(collapsed, select=c("Subject", "Gender"))
nrow(foo[foo$Gender=="F",])
nrow(foo[foo$Gender=="M",])
################################################
#######ANALYSIS!
#aggregate the choices in a new dataframe: how many causal choices did you make, 0, 1, or 2
sum.na.rm <- function(x) { sum(x,na.rm=T) }
my.sd <- function(x) {sd(x)/sqrt(length(x))}
Scores <- aggregate(mydata$Choice.Causal, by=list(mydata$Subject), sum.na.rm)
names(Scores) <- c("Subject", "CausalScore")
collapsed <- merge(collapsed,Scores, by=c("Subject"))
with(collapsed, tapply(CausalScore, list(Condition), mean, na.rm=TRUE), drop=TRUE)
with(collapsed, tapply(CausalScore, list(Condition), my.sd), drop=TRUE)
#Check whether each group is different from chance, with wilcox test
wilcox.test(collapsed[collapsed$Condition=="Transitive",]$CausalScore, mu=1, exact=FALSE)
wilcox.test(collapsed[collapsed$Condition=="Intransitive",]$CausalScore, mu=1, exact=FALSE)
wilcox.test(collapsed[collapsed$Condition=="Happen",]$CausalScore, mu=1, exact=FALSE)
#And is transitive different from intransitive?
wilcox.test(collapsed[collapsed$Condition=="Transitive",]$CausalScore, collapsed[collapsed$Condition=="Intransitive",]$CausalScore, exact=FALSE, paired = FALSE)
with(collapsed, tapply(CausalScore, list(Condition), length, na.rm=TRUE), drop=TRUE)
with(collapsed, tapply(CausalScore, list(Condition), nrow, na.rm=TRUE), drop=TRUE)
length(collapsed$Days.Old)
mean(aggregate(collapsed$Days.Old, by=list(collapsed$Subject), mean))
length(transitive$Days.Old)
mean(aggregate(transitive$Days.Old, by=list(transitive$Subject), mean))
length(intransitive$Days.Old)
mean(aggregate(intransitive$Days.Old, by=list(intransitive$Subject), mean))
length(happen$Days.Old)
mean(aggregate(happen$Days.Old, by=list(happen$Subject), mean))
#aggregate the choices in a new dataframe: how many causal choices did you make, 0, 1, or 2
sum.na.rm <- function(x) { sum(x,na.rm=T) }
my.sd <- function(x) {sd(x)/sqrt(length(x))}
Scores <- aggregate(mydata$Choice.Causal, by=list(mydata$Subject), sum.na.rm)
names(Scores) <- c("Subject", "CausalScore")
collapsed <- merge(collapsed,Scores, by=c("Subject"))
nrow(collapsed)
with(collapsed, tapply(CausalScore, list(Condition), mean, na.rm=TRUE), drop=TRUE)
with(collapsed, tapply(CausalScore, list(Condition), my.sd), drop=TRUE)
library(reshape)
####Load Datafiles
#Load in the data from the TVW files
mydata <- data.frame(NULL)
max_participant = 131
for(f in 1:max_participant) {
filename = paste('Data/TSW_', f, '.dat', sep='')
tryCatch({
tmp <- read.table(filename, header=FALSE, sep=" ")
names(tmp) <- c("Subject", "Condition", "Trial.Number", "MUSH", "First.Item", "Second.Item",
"First.Side", "Causal.Side", "Response.Causal", "Choice.Causal")
mydata <- rbind(mydata, tmp)
},
error = function(ex) {},
finally = {})
}
#Load in the data about participants and pretest/touch performance
pdata <- data.frame(NULL)
pdata <- read.table('Participants_TSW.csv', header=TRUE, sep=',')
mydata <- merge(mydata, pdata, by=c("Subject"))
#Make sure conditions are labeled correctly
mydata <- mydata[mydata$Experiment != "switch-pilot",]
#THROW OUT people who didn't get included!
#Optional - keep those who just failed pretest!!
mydata[mydata$Exclude.Reason == "FAILED PRETEST",]$Include <- 0
mydata <- mydata[mydata$Include == 1,]
mydata <- mydata[!is.na(mydata$Condition),]
################################################
#####DEMOGRAPHICS
#means days old - Note, it counts subjects not trials
collapsed <- mydata[!duplicated(mydata$Subject),]
transitive <- collapsed[collapsed$Condition=="Transitive",]
intransitive <- collapsed[collapsed$Condition=="Intransitive",]
happen <- collapsed[collapsed$Condition=="Happen",]
length(collapsed$Days.Old)
mean(aggregate(collapsed$Days.Old, by=list(collapsed$Subject), mean))
length(transitive$Days.Old)
mean(aggregate(transitive$Days.Old, by=list(transitive$Subject), mean))
length(intransitive$Days.Old)
mean(aggregate(intransitive$Days.Old, by=list(intransitive$Subject), mean))
length(happen$Days.Old)
mean(aggregate(happen$Days.Old, by=list(happen$Subject), mean))
foo <- subset(collapsed, select=c("Subject", "Days.Old"))
min(foo$Days.Old)
max(foo$Days.Old)
#Number of girls - Note, make sure it counts subjects, not trials!
foo <- subset(collapsed, select=c("Subject", "Gender"))
nrow(foo[foo$Gender=="F",])
nrow(foo[foo$Gender=="M",])
################################################
#######ANALYSIS!
#aggregate the choices in a new dataframe: how many causal choices did you make, 0, 1, or 2
sum.na.rm <- function(x) { sum(x,na.rm=T) }
my.sd <- function(x) {sd(x)/sqrt(length(x))}
Scores <- aggregate(mydata$Choice.Causal, by=list(mydata$Subject), sum.na.rm)
names(Scores) <- c("Subject", "CausalScore")
collapsed <- merge(collapsed,Scores, by=c("Subject"))
with(collapsed, tapply(CausalScore, list(Condition), mean, na.rm=TRUE), drop=TRUE)
with(collapsed, tapply(CausalScore, list(Condition), my.sd), drop=TRUE)
#Check whether each group is different from chance, with wilcox test
wilcox.test(collapsed[collapsed$Condition=="Transitive",]$CausalScore, mu=1, exact=FALSE)
wilcox.test(collapsed[collapsed$Condition=="Intransitive",]$CausalScore, mu=1, exact=FALSE)
wilcox.test(collapsed[collapsed$Condition=="Happen",]$CausalScore, mu=1, exact=FALSE)
#And is transitive different from intransitive?
wilcox.test(collapsed[collapsed$Condition=="Transitive",]$CausalScore, collapsed[collapsed$Condition=="Intransitive",]$CausalScore, exact=FALSE, paired = FALSE)
#And is transitive different from happen?
wilcox.test(collapsed[collapsed$Condition=="Transitive",]$CausalScore, collapsed[collapsed$Condition=="Happen",]$CausalScore, exact=FALSE, paired = FALSE)
#And is happen different from intransitive?
wilcox.test(collapsed[collapsed$Condition=="Happen",]$CausalScore, collapsed[collapsed$Condition=="Intransitive",]$CausalScore, exact=FALSE, paired = FALSE)
#Time for bootstrapped confidence intervals around the means of the 3 conditions!
library(bootstrap)
trans.boot.mean = bootstrap(collapsed[collapsed$Condition=="Transitive",]$CausalScore, 1000, mean)
quantile(trans.boot.mean$thetastar, c(0.025, 0.975))
intrans.boot.mean = bootstrap(collapsed[collapsed$Condition=="Intransitive",]$CausalScore, 1000, mean)
quantile(intrans.boot.mean$thetastar, c(0.025, 0.975))
happen.boot.mean = bootstrap(collapsed[collapsed$Condition=="Happen",]$CausalScore, 1000, mean)
quantile(happen.boot.mean$thetastar, c(0.025, 0.975))
#And is transitive different from intransitive?
t.test(collapsed[collapsed$Condition=="Transitive",]$CausalScore, collapsed[collapsed$Condition=="Intransitive",]$CausalScore, exact=FALSE, paired = FALSE)
#And is transitive different from happen?
t.test(collapsed[collapsed$Condition=="Transitive",]$CausalScore, collapsed[collapsed$Condition=="Happen",]$CausalScore, exact=FALSE, paired = FALSE)
